# Read logs from journald from the docker systemd unit.
<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "docker.service" }]
  pos_file /var/log/fluentd-journald-docker.pos
  read_from_head true
  tag docker.source
</source>

# Filter unnecessary fields from the input, and generate the SERVICE_NAME field.
<filter docker.source>
   @type       record_transformer
   enable_ruby true
   remove_keys ["_SYSTEMD_UNIT", "_HOSTNAME", "CONTAINER_NAME", "CONTAINER_TAG", "_GID","_CAP_EFFECTIVE","SYSLOG_FACILITY","PRIORITY","SYSLOG_IDENTIFIER","_BOOT_ID","_CMDLINE","_COMM","_EXE","_SYSTEMD_CGROUP","_SYSTEMD_SLICE","_TRANSPORT","_UID","__CURSOR","__MONOTONIC_TIMESTAMP","_SELINUX_CONTEXT","__REALTIME_TIMESTAMP","_PID","CONTAINER_ID","CONTAINER_ID_FULL","_MACHINE_ID","_SOURCE_REALTIME_TIMESTAMP","_SYSTEMD_INVOCATION_ID"]
   <record>
      SERVICE_NAME      ${ record["CONTAINER_NAME"] != nil && record["CONTAINER_NAME"].split("_").length >= 2 ? record["CONTAINER_NAME"].split("_")[1].split(".")[0] : "" }
      transaction_id    ${ /\btransaction_id=(?<transaction_id>[A-Za-z0-9\-_:]+)/ =~ record["MESSAGE"] && transaction_id != nil ? transaction_id : "" }
      platform          upp-k8s
      SYSTEMD_UNIT      ${record["_SYSTEMD_UNIT"]}
      HOSTNAME          ${record["_HOSTNAME"]}
   </record>
</filter>

<match docker.source>
   @type rewrite_tag_filter

   # Filter out unnecessary logs
   <rule>
      key MESSAGE
      pattern \/__health|\"transaction_id\":\"SYNTHETIC-REQ|\/__gtg|transaction_id=SYNTHETIC-REQ|MountVolume.SetUp succeeded for volume
      tag docker.blacklisted
   </rule>

   # Re-route logs to tags that include their service name (for per-service processing)
   <rule>
      key     SERVICE_NAME
      pattern (.+)
      tag     docker.service_name.$1
   </rule>
</match>

# Parse the MESSAGE field as json, and merge the new fields into the log message
<filter docker.service_name.* >
   @type parser
   format multi_format
   key_name MESSAGE

   reserve_data true
   suppress_parse_error_log false

   <pattern>
      # Assume JSON log format (should match most apps)
      format json
   </pattern>
   <pattern>
      # Varnish response access logs
      format /^[\d\.\,\s]+\s+(?<authuser>\S+)\s+[\w:\/]+\s+(?<uri>\S+)\s+(?<status>[0-9]{3})\s+(?<resptime>[0-9\.]+)\s+\"(?<useragent>[\S\s]+)\"\stransaction_id=(?<transaction_id>[\S]+)/
   </pattern>
   <pattern>
      # No matches, passthrough
      format none
      message_key MESSAGE
   </pattern>
</filter>
