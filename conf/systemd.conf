# Logs from systemd-journal for interesting services.
# <source>
  # @type systemd
  # filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
  # pos_file /var/log/fluentd-journald-kubelet.pos
  # read_from_head true
  # tag kubelet
# </source>

# Logs from docker-systemd
<source>
  @type systemd
  filters [{ "_SYSTEMD_UNIT": "docker.service" }]
  pos_file /var/log/fluentd-journald-docker.pos
  read_from_head true
  tag docker.source
</source>

<filter docker.source>
   @type record_transformer
   enable_ruby true
   remove_keys ["CONTAINER_NAME", "CONTAINER_TAG", "_GID","_CAP_EFFECTIVE","SYSLOG_FACILITY","PRIORITY","SYSLOG_IDENTIFIER","_BOOT_ID","_CMDLINE","_COMM","_EXE","_SYSTEMD_CGROUP","_SYSTEMD_SLICE","_TRANSPORT","_UID","__CURSOR","__MONOTONIC_TIMESTAMP","_SELINUX_CONTEXT","__REALTIME_TIMESTAMP","_PID","CONTAINER_ID","CONTAINER_ID_FULL","MACHINE_ID","_SOURCE_REALTIME_TIMESTAMP","_SYSTEMD_INVOCATION_ID"]
   <record>
      SERVICE_NAME ${ record["CONTAINER_NAME"] != nil && record["CONTAINER_NAME"].split("_").length >= 2 ? record["CONTAINER_NAME"].split("_")[1].split(".")[0] : "" }
   </record>
</filter>

<match docker.source>
   @type rewrite_tag_filter
   <rule>
      key     SERVICE_NAME
      pattern (.+)
      tag     docker.service_name.$1
   </rule>
</match>

<filter docker.service_name.* >
   @type parser
   format json
   key_name MESSAGE
</filter>

# <source>
  # @type systemd
  # filters [{ "_SYSTEMD_UNIT": "bootkube.service" }]
  # pos_file /var/log/fluentd-journald-bootkube.pos
  # read_from_head true
  # tag bootkube
# </source>

# <source>
  # @type systemd
  # pos_file /var/log/fluentd-journald.pos
  # read_from_head true
  # tag journald
# </source>
