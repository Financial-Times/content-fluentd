apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}"
    app: {{ .Values.service.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
{{- with .Values.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
        app: {{ .Values.service.name }}
    spec:
      tolerations:
      - operator: "Exists"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: NotIn
                values:
                - kiam-server
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        env:
        - name: ENVIRONMENT_NAME
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: environment
        - name: KINESIS_STREAM
          valueFrom:
            configMapKeyRef:
              name: fluentd-config
              key: content.fluentd.kinesis.stream
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: fluentd-config
              key: kinesis.aws.region
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: splunk.forwarder.s3.bucket
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - name: http-input
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: "/fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      serviceAccountName: {{ .Values.serviceAccountName }}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
